<<<<<<< HEAD
# Xcode
#
# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore

## User settings
=======
## Litewallet related
brainwallet/service-data.plist
brainwallet/GoogleService-Info.plist
service-data.plist
GoogleService-Info.plist

## Build generated
build/
DerivedData/

## OS Related
.DS_Store

## Various settings
*.moved-aside

## Xcode related
*.xcuserstate
>>>>>>> origin/techdebt/kcw-debugging
xcuserdata/

## Obj-C/Swift specific
*.hmap
<<<<<<< HEAD

## App packaging
=======
>>>>>>> origin/techdebt/kcw-debugging
*.ipa
*.dSYM.zip
*.dSYM

<<<<<<< HEAD
## Playgrounds
timeline.xctimeline
playground.xcworkspace

# Swift Package Manager
#
# Add this line if you want to avoid checking in source code from Swift Package Manager dependencies.
# Packages/
# Package.pins
# Package.resolved
# *.xcodeproj
#
# Xcode automatically generates this directory with a .xcworkspacedata file and xcuserdata
# hence it is not needed unless you have added a package configuration file to your project
# .swiftpm

.build/

# CocoaPods
#
# We recommend against adding the Pods directory to your .gitignore. However
# you should judge for yourself, the pros and cons are mentioned at:
# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
#
# Pods/
#
# Add this line if you want to avoid checking in source code from the Xcode workspace
# *.xcworkspace

# Carthage
#
# Add this line if you want to avoid checking in source code from Carthage dependencies.
# Carthage/Checkouts

Carthage/Build/

# fastlane
#
# It is recommended to not store the screenshots in the git repo.
# Instead, use fastlane to re-generate the screenshots whenever they are needed.
# For more information about the recommended setup visit:
# https://docs.fastlane.tools/best-practices/source-control/#source-control

fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots/**/*.png
fastlane/test_output
Modules/data/android/dataandroidprivate/gradle/.DS_Store
brainwallet/launch-resources/service-data.plist
brainwallet/launch-resources/remote-config-defaults.plist
brainwallet/launch-resources/GoogleService-Info.plist
.DS_Store
=======
# Swift Package Manager 
Packages/
Package.pins
.build/

# Add this line if you want to avoid checking in Xcode SPM integration.
.swiftpm/xcode/package.xcworkspace/contents.xcworkspacedata
 SourcePackages/

# SwiftFormat
BuildTools/.build
BuildTools/.swiftpm

# Sensitive Partner API 
*.gpx
brainwallet/remote-config-defaults.plist
remote-config-defaults.plist
/SourcePackages
/brainwallet/launch-resources/GoogleService-Info.plist
/brainwallet/launch-resources/remote-config-defaults.plist
/brainwallet/launch-resources/service-data.plist
>>>>>>> origin/techdebt/kcw-debugging
